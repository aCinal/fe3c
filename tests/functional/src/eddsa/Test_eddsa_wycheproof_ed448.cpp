#include <functional_tests.h>
#include <fe3c/eddsa.h>

#if FE3C_FUNCTIONAL_TESTS_HOST
TEST_GROUP(EDDSA_WYCHEPROOF_ED448) {

    /* Test vectors taken from Project Wycheproof (https://github.com/google/wycheproof/). Note that vectors tagged
     * as "SignatureWithGarbage", "TruncatedSignature", "CompressedSignature" are not included since their fault lies
     * in having signatures of invalid length. Fe3C does not perform checks on signature length and instead exposes
     * APIs necessary to do it to the application. This is motivated by the fact that in C the library would still have
     * to trust the caller about the length of the provided buffers (the caller would need to pass the lengths as
     * arguments). It is thus believed to be a better choice to provide a simpler, leaner implementation without
     * the defensive checks and allow the application to perform them if necessary. */
};
#endif /* FE3C_FUNCTIONAL_TESTS_HOST */

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId1) {

    const u8 message[] = \
        "";
    const u8 signature[] = \
        "\xcf\x79\x53\x00\x76\x66\xe1\x2f" \
        "\x73\xaf\x9e\xc9\x2e\x3e\x01\x8d" \
        "\xa5\xee\x5a\x8d\x5b\x17\xf5\x10" \
        "\x0a\x35\x4c\x58\xf1\xd5\xf4\xbb" \
        "\x37\xab\x83\x5c\x52\xf7\x23\x74" \
        "\xc7\x2d\x61\x26\x89\x14\x9c\xf6" \
        "\xd3\x6a\x70\xdb\x6d\xc5\xa6\xc4" \
        "\x00\xb5\x97\x34\x8e\x0e\x31\xe5" \
        "\x1e\x65\xbb\x14\x4e\x63\xc8\x92" \
        "\xa3\x67\xb4\xc0\x55\xc0\x36\xaa" \
        "\x6c\xd7\xe7\x28\xcd\xd2\xa0\x98" \
        "\x96\x3b\xda\x86\x39\x03\xe6\xdd" \
        "\x02\x5b\x5a\x5d\x89\x12\x09\xf4" \
        "\xe2\x85\x37\x69\x48\x04\xe5\x0b" \
        "\x08\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId2) {

    const u8 message[] = \
        "\x78";
    const u8 signature[] = \
        "\xc5\x6e\x94\xd5\xc9\xca\x86\x0c" \
        "\x24\x4f\x33\xdb\x55\x6b\xf6\xb3" \
        "\xce\xc3\x8b\x02\x4b\x77\x60\x4a" \
        "\x35\xd6\xa0\x72\x11\xb1\x31\x6b" \
        "\x9a\x02\x71\x33\xc3\x74\xb8\x6f" \
        "\x72\x66\x5c\xc4\x5c\xe0\x15\x83" \
        "\xa2\xe0\xf2\x77\x5c\x61\x72\xda" \
        "\x80\x1a\xce\xf1\x68\x71\x7c\xab" \
        "\x11\x96\xcd\xdf\xb1\x49\x35\x9d" \
        "\xfe\xf5\x89\x75\x62\x57\xcc\x2d" \
        "\x6b\x02\xfc\x51\x6d\x8d\x41\xb4" \
        "\xad\xaa\x3f\x11\x42\x8f\x41\x41" \
        "\x0e\xf0\xdc\x3c\x1b\x00\x8d\x3d" \
        "\x05\x21\x73\xd4\x38\x95\x08\xed" \
        "\x01\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId3) {

    const u8 message[] = \
        "\x54\x65\x73\x74";
    const u8 signature[] = \
        "\x5d\x05\x3f\xf5\xb7\x1f\x6e\xc3" \
        "\x28\x45\x25\xd3\x5d\x77\x93\x31" \
        "\x78\xc8\xe1\x98\x79\x88\x6d\x08" \
        "\xec\xcc\x6c\x7d\x27\xe9\xe5\xb5" \
        "\xe0\x25\x37\xdb\xc4\xd4\x72\x35" \
        "\x06\xe8\xd1\x71\xfc\x17\x33\x85" \
        "\x75\x73\xdd\x02\xd1\x8f\x48\xf2" \
        "\x80\x31\xd6\x7d\x69\x9a\x18\x8a" \
        "\x9c\xa4\x6b\x4e\xab\xe2\x10\x7a" \
        "\xef\x23\x7c\xa6\x09\xcb\x46\x2e" \
        "\x24\xc9\x1d\x25\xd2\x86\x40\x2b" \
        "\x6e\xf7\x86\x2b\x78\xa3\x86\x95" \
        "\x02\x46\xff\x38\xd6\xd2\xf4\x58" \
        "\x13\x6d\x12\xe3\xc9\x7f\xdd\x98" \
        "\x26\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId4) {

    const u8 message[] = \
        "\x48\x65\x6c\x6c\x6f";
    const u8 signature[] = \
        "\x44\x2e\x33\x78\x0f\x19\x9d\xd7" \
        "\xbc\x71\xd1\x33\x5f\x74\xdf\x7f" \
        "\x3a\x0e\xc7\x89\xe2\x1a\x17\x5c" \
        "\x1b\xff\xdd\xb6\xe5\x00\x91\x99" \
        "\x8d\x96\x9a\xc8\x19\x4b\x3a\xce" \
        "\xfb\x77\x02\xf6\xc2\x22\xf8\x4f" \
        "\x7e\xec\xa3\xb8\x04\x06\xf1\xfe" \
        "\x80\x68\x79\x15\xe7\x92\x5b\xf5" \
        "\x2d\xeb\x47\xb6\xb7\x79\xe2\x6d" \
        "\x30\xee\xc7\xc5\xfe\xf0\x35\x80" \
        "\xf2\x80\xa0\x89\xee\xfd\x0b\xac" \
        "\xc9\xfb\xbb\x6a\x4d\x73\xa5\x91" \
        "\xd1\x67\x1d\x19\x2e\x6b\xbc\xfd" \
        "\xb7\x9a\xd3\xdb\x56\x73\xa1\x26" \
        "\x30\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId5) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\x60\xa0\x52\x36\xfc\x9c\x16" \
        "\x82\xb0\xe5\x5b\x60\xa0\x82\xc9" \
        "\xa5\x7b\xff\xe6\x1e\xf4\xdd\xa5" \
        "\xce\x65\xdf\x53\x98\x05\x12\x2b" \
        "\x3a\x09\xa0\x59\x76\xd4\x1a\xd6" \
        "\x8a\xb5\x2d\xf8\x54\x28\x15\x2c" \
        "\x57\xda\x93\x53\x1e\x5d\x16\x92" \
        "\x0e\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId6) {

    const u8 message[] = \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00";
    const u8 signature[] = \
        "\xa8\xca\x64\xd1\xab\x00\xea\xe7" \
        "\x7f\xd2\x85\x4d\x84\x22\xdb\x3a" \
        "\xe1\x2f\xca\x91\xc1\x4f\x27\x4f" \
        "\x30\xa4\x4d\xf9\x85\x90\x78\x6e" \
        "\xc4\xcb\xb9\x6a\x95\x64\xfc\x1b" \
        "\x9b\x16\xc2\x2d\x2b\xd0\x0a\xa6" \
        "\x5f\x08\x76\x32\x37\x29\xf5\xac" \
        "\x80\x9f\xb0\xb8\x9a\x4d\x3f\x27" \
        "\xaf\xba\xbb\x59\x68\x51\xd8\x35" \
        "\x17\x3d\x60\xea\x34\xe0\x87\x53" \
        "\x59\xf3\xd6\xad\xb1\x3c\xef\x13" \
        "\x95\xb7\xea\xa5\xf9\x14\x75\x83" \
        "\xff\x38\xb4\xde\xb1\x83\x06\x28" \
        "\x74\x91\x5b\xf1\x94\xae\x61\x07" \
        "\x23\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId7) {

    const u8 message[] = \
        "\x61\x61\x61\x61\x61\x61\x61\x61" \
        "\x61\x61\x61\x61\x61\x61\x61\x61" \
        "\x61\x61\x61\x61\x61\x61\x61\x61" \
        "\x61\x61\x61\x61\x61\x61\x61\x61" \
        "\x61\x61\x61\x61\x61\x61\x61\x61" \
        "\x61\x61\x61\x61\x61\x61\x61\x61" \
        "\x61\x61\x61\x61\x61\x61\x61\x61" \
        "\x61\x61\x61\x61\x61\x61\x61\x61" \
        "\x61";
    const u8 signature[] = \
        "\xb2\x05\xd3\xe2\x4c\xce\xf6\x4c" \
        "\x1e\x86\xf1\x5f\x48\xdd\xfa\x68" \
        "\x24\x53\x50\x34\x89\x47\x51\x88" \
        "\xb0\x4a\x8f\x55\x86\x0b\x3c\x8a" \
        "\x9c\x01\xe6\xde\x82\x0b\xb7\xd9" \
        "\xb1\x5d\xaf\xf8\xde\x25\xa4\xa8" \
        "\x70\xe9\x87\x15\x7a\x11\x5e\xc1" \
        "\x80\x2d\xa0\xd0\x60\x6d\xa1\x28" \
        "\x42\xea\x7e\xab\x65\x8b\x5e\xea" \
        "\x6d\xd1\xf3\xa6\x41\xa5\x17\x44" \
        "\x25\x57\x80\x03\xcd\x31\x8b\x8d" \
        "\x6b\x8d\xcb\x4d\xe9\x54\xb5\x07" \
        "\x8d\x19\x12\xc5\x78\xad\x82\x81" \
        "\x51\x5d\x6d\xf3\x67\x2b\x94\x17" \
        "\x3f\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId8) {

    const u8 message[] = \
        "\x20\x21\x22\x23\x24\x25\x26\x27" \
        "\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f" \
        "\x30\x31\x32\x33\x34\x35\x36\x37" \
        "\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f" \
        "\x40\x41\x42\x43\x44\x45\x46\x47" \
        "\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f" \
        "\x50\x51\x52\x53\x54\x55\x56\x57" \
        "\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f" \
        "\x60";
    const u8 signature[] = \
        "\x34\x92\xef\x66\xe5\xfd\xf1\x50" \
        "\x3e\x9e\x20\x6c\x5c\x2f\x0d\x4b" \
        "\x78\x91\xaa\xd7\x93\x57\x55\x27" \
        "\xd2\x25\x1e\x0d\xf1\xb9\x7c\x2f" \
        "\xea\xc1\x88\xbc\x38\x2c\xe3\xc9" \
        "\x2c\x4b\xc3\x6b\xa2\x69\x5f\x32" \
        "\xbe\xda\xdd\x48\x0e\xaa\x93\x23" \
        "\x00\xd0\xdb\x1f\x9a\x9c\x60\x84" \
        "\x4d\x2e\xa5\xae\xa6\x49\x33\xc7" \
        "\xbe\x46\xc4\xf9\xd2\x1c\xb4\x8b" \
        "\x39\xea\xe2\x3d\x08\x49\x6d\xe7" \
        "\xce\x95\x01\x19\x71\x85\xcc\x5d" \
        "\x4f\xf8\xaa\x4b\x01\x8c\xe7\xad" \
        "\x32\x1f\x6a\x7d\x77\x8c\x4a\x07" \
        "\x04\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId9) {

    const u8 message[] = \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff";
    const u8 signature[] = \
        "\x54\x5e\x19\x05\xaf\x1b\x58\x86" \
        "\x55\x2e\xaf\x78\xe1\x73\x04\xc6" \
        "\xf8\x3f\xcf\xb3\x44\x4d\xf2\xd1" \
        "\xea\x05\x64\x86\xdb\x61\x5e\x3b" \
        "\xb2\x91\x31\xbb\x0c\x1f\xd2\x95" \
        "\x36\x4d\xc5\x15\xda\xe5\x81\x96" \
        "\x71\x48\xeb\x23\xc6\xc9\x01\x2e" \
        "\x80\x6d\x36\x23\xba\xff\x00\x54" \
        "\x8c\x64\x8e\x3c\xb3\x75\x6a\xaa" \
        "\xaf\x65\x9f\x2f\xb7\xdd\x2e\x71" \
        "\xc7\x61\x14\x48\x59\x3c\xa6\x3f" \
        "\x2a\x98\x91\x3a\xb7\xf1\x82\xe6" \
        "\x82\x0e\xaf\x13\x34\xe2\x74\x5e" \
        "\x0e\x7b\xc0\xdc\xca\xb9\x8d\xe7" \
        "\x16\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId10) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId11) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x01\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId12) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\xf2\x44\x58\xab\x92\xc2\x78" \
        "\x23\x55\x8f\xc5\x8d\x72\xc2\x6c" \
        "\x21\x90\x36\xd6\xae\x49\xdb\x4e" \
        "\xc4\xe9\x23\xca\x7c\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\x3f\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId13) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\xf3\x44\x58\xab\x92\xc2\x78" \
        "\x23\x55\x8f\xc5\x8d\x72\xc2\x6c" \
        "\x21\x90\x36\xd6\xae\x49\xdb\x4e" \
        "\xc4\xe9\x23\xca\x7c\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\x3f\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId14) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xfe\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId15) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\x01\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId16) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\x01\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x01\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId17) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\x01\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\xf2\x44\x58\xab\x92\xc2\x78" \
        "\x23\x55\x8f\xc5\x8d\x72\xc2\x6c" \
        "\x21\x90\x36\xd6\xae\x49\xdb\x4e" \
        "\xc4\xe9\x23\xca\x7c\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\x3f\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId18) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\x01\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\xf3\x44\x58\xab\x92\xc2\x78" \
        "\x23\x55\x8f\xc5\x8d\x72\xc2\x6c" \
        "\x21\x90\x36\xd6\xae\x49\xdb\x4e" \
        "\xc4\xe9\x23\xca\x7c\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\x3f\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId19) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\x01\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xfe\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId20) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\xf3\x44\x58\xab\x92\xc2\x78\x23" \
        "\x55\x8f\xc5\x8d\x72\xc2\x6c\x21" \
        "\x90\x36\xd6\xae\x49\xdb\x4e\xc4" \
        "\xe9\x23\xca\x7c\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\x3f" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId21) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\xf3\x44\x58\xab\x92\xc2\x78\x23" \
        "\x55\x8f\xc5\x8d\x72\xc2\x6c\x21" \
        "\x90\x36\xd6\xae\x49\xdb\x4e\xc4" \
        "\xe9\x23\xca\x7c\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\x3f" \
        "\x00\x01\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId22) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\xf3\x44\x58\xab\x92\xc2\x78\x23" \
        "\x55\x8f\xc5\x8d\x72\xc2\x6c\x21" \
        "\x90\x36\xd6\xae\x49\xdb\x4e\xc4" \
        "\xe9\x23\xca\x7c\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\x3f" \
        "\x00\xf2\x44\x58\xab\x92\xc2\x78" \
        "\x23\x55\x8f\xc5\x8d\x72\xc2\x6c" \
        "\x21\x90\x36\xd6\xae\x49\xdb\x4e" \
        "\xc4\xe9\x23\xca\x7c\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\x3f\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId23) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\xf3\x44\x58\xab\x92\xc2\x78\x23" \
        "\x55\x8f\xc5\x8d\x72\xc2\x6c\x21" \
        "\x90\x36\xd6\xae\x49\xdb\x4e\xc4" \
        "\xe9\x23\xca\x7c\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\x3f" \
        "\x00\xf3\x44\x58\xab\x92\xc2\x78" \
        "\x23\x55\x8f\xc5\x8d\x72\xc2\x6c" \
        "\x21\x90\x36\xd6\xae\x49\xdb\x4e" \
        "\xc4\xe9\x23\xca\x7c\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\x3f\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId24) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\xf3\x44\x58\xab\x92\xc2\x78\x23" \
        "\x55\x8f\xc5\x8d\x72\xc2\x6c\x21" \
        "\x90\x36\xd6\xae\x49\xdb\x4e\xc4" \
        "\xe9\x23\xca\x7c\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\x3f" \
        "\x00\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xfe\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId25) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xfe\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId26) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xfe\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\x00\x01\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId27) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xfe\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\x00\xf2\x44\x58\xab\x92\xc2\x78" \
        "\x23\x55\x8f\xc5\x8d\x72\xc2\x6c" \
        "\x21\x90\x36\xd6\xae\x49\xdb\x4e" \
        "\xc4\xe9\x23\xca\x7c\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\x3f\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId28) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xfe\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\x00\xf3\x44\x58\xab\x92\xc2\x78" \
        "\x23\x55\x8f\xc5\x8d\x72\xc2\x6c" \
        "\x21\x90\x36\xd6\xae\x49\xdb\x4e" \
        "\xc4\xe9\x23\xca\x7c\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\x3f\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId29) {

    const u8 message[] = \
        "\x3f";
    const u8 signature[] = \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xfe\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\x00\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xfe\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId42) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5c\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\xaf\xc3\x3a\x52\x51\x16\xcc" \
        "\x12\xe0\xd1\xc3\xa1\xfd\xe6\xde" \
        "\x51\x8a\x65\x44\xf3\x60\xd0\xfe" \
        "\x18\xd5\xbe\x77\x70\xb0\x57\xa2" \
        "\xbf\x79\x2d\xb4\xb7\x64\x8f\xa8" \
        "\x4a\x6e\xae\xca\xe9\x09\xe3\x3f" \
        "\xa5\x9c\x5d\xfe\x48\x04\xba\x26" \
        "\x23\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId43) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5f\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\xf9\x13\x86\xc3\xe9\xdd\x9e" \
        "\x7c\x9a\xf7\xca\x6b\xbe\xf8\xb7" \
        "\xa4\x4a\xe3\xd6\x8e\xea\xde\x44" \
        "\x9d\x7d\xfb\xb3\x1d\xe8\x41\x9e" \
        "\xb9\x43\xe2\xec\xbc\xdd\x06\xdf" \
        "\x52\x27\xe8\x2b\x9d\xed\x51\x9a" \
        "\x56\xe7\x0f\x0a\x1c\x0f\xc1\x7b" \
        "\x06\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId44) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x59\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\xf1\xaa\xb0\x7b\x4a\xd0\x69" \
        "\xdf\xaf\xc0\x1b\x45\x32\xe1\xe4" \
        "\x4c\xbf\x71\x77\xe1\xbd\xda\x19" \
        "\x7f\xc8\x74\x34\x04\x6d\xb5\xb9" \
        "\x35\xaf\xd9\x11\x4a\xc5\xe1\x13" \
        "\x8e\xae\xad\x23\xc3\xb5\x9d\xba" \
        "\x90\x26\xd2\xda\x4a\x86\xfe\x80" \
        "\x0b\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId45) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\xdd\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\x76\x68\x40\x2b\x7b\x09\x3f" \
        "\xc7\x54\x01\x93\x24\x07\x7c\x1f" \
        "\x84\x2a\x7d\x2e\x35\xad\xf7\xb8" \
        "\x70\x94\x11\x5c\xec\x45\x9a\xd5" \
        "\x41\x9e\x16\x29\x88\xef\x42\xb1" \
        "\x98\x8d\x9b\x94\x4d\x9d\x5a\x7c" \
        "\xe0\x9c\x6f\x34\x2a\xfa\x50\x08" \
        "\x39\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId46) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb8\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\x27\x9b\x70\x33\x85\x86\xb9" \
        "\xe1\x3e\x66\x91\x91\xcc\x0d\xfc" \
        "\x2a\x93\x7d\x50\xa6\x11\x87\x58" \
        "\xde\x04\xa4\xca\x41\xf4\x87\x7a" \
        "\xbd\xb9\x71\xaf\xa8\x7f\xe4\xb8" \
        "\x3b\xc2\x43\xb8\xdf\xd2\xcb\x36" \
        "\x8a\xa3\x89\xa4\xcb\x11\xe8\x3e" \
        "\x31\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId47) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4d\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\xc7\xb8\x47\x55\x6b\x3a\x6f" \
        "\x94\x47\x48\x38\x99\xab\x73\x0a" \
        "\x23\x00\x4c\x69\x50\x54\xdd\x57" \
        "\xb1\xc3\x21\x4f\xa8\x7f\x63\x2f" \
        "\x39\xc8\xff\x14\x71\xf0\x53\x2b" \
        "\x8e\xee\x41\x54\x93\x0e\x1c\xa3" \
        "\x0d\x57\x4b\x8f\x9e\x85\xb0\x43" \
        "\x2b\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId48) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\xd3\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\x0b\x01\x79\x17\x47\x2b\x13" \
        "\x0a\x1c\xc1\xc8\xe9\x95\xa2\x52" \
        "\x61\x7d\x5d\xda\xf1\xf3\xd4\x89" \
        "\x30\xb4\x87\x6f\xa0\xd2\xcf\xed" \
        "\xec\x90\xa8\xc8\x5c\x82\x74\x89" \
        "\x2a\x1c\xa3\xb6\xcf\xce\x63\xeb" \
        "\xfe\xbc\x30\x72\x10\xb8\x44\xae" \
        "\x0c\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId49) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x11\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\x5f\x38\xf6\x37\x18\x60\xfc" \
        "\xc4\xf2\xec\x51\x5a\xfd\x35\xcb" \
        "\x05\xd8\x94\x1e\x24\x48\xcc\x46" \
        "\x9a\x15\xb8\x53\x7e\x75\x8b\x16" \
        "\xd4\x6b\x12\x35\x81\x61\x34\x62" \
        "\xc2\xbb\x20\xd8\xa0\x72\x99\xab" \
        "\x79\x5d\x09\x98\xe1\xe4\x27\x79" \
        "\x31\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId50) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x9f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\x17\x11\x1b\xa6\xfe\xfd\x45" \
        "\xe2\x49\x0f\x1d\x53\xa1\x84\x00" \
        "\x7f\xa0\x73\x47\x07\x06\xd7\xf4" \
        "\xa9\x60\x6f\xca\xd2\x95\x4e\x74" \
        "\xc3\x21\x16\xba\x77\x01\xd2\x25" \
        "\xb7\x6e\x55\x16\x4e\x64\xdf\x32" \
        "\x45\xc1\x03\x1f\x0d\xf7\x34\xbd" \
        "\x31\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId51) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6d\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\x8d\x7d\x0a\xa1\xfd\x81\xd0" \
        "\xe3\x17\x89\x92\x17\x71\xc6\x54" \
        "\x33\x8f\x96\xf0\xb5\x57\xb6\x15" \
        "\xe3\xda\x55\x67\x02\x71\x60\x8a" \
        "\x0e\x02\x2e\x4e\x8c\xf3\x93\xe3" \
        "\x09\xf8\xf6\x41\x22\x81\xb6\x14" \
        "\x7e\x7f\xce\x42\xb0\x89\xeb\x1e" \
        "\x0c\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId52) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0c\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\xb0\x8d\x3b\xe6\xeb\xf4\xe6" \
        "\x0b\xf6\xd7\x4e\x10\x5e\xa2\xfa" \
        "\x9b\x96\x5c\x62\x81\x6b\xbd\x22" \
        "\xea\x3b\xb0\xc1\xac\xfd\x12\x30" \
        "\x05\x23\xca\x76\xf9\x4b\x6f\x78" \
        "\x94\x88\xa9\x57\xfb\xeb\x21\x2d" \
        "\x71\x3b\xac\xcf\x95\xfd\x59\x4f" \
        "\x3d\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId53) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\x60" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\xa2\x3f\x54\x85\x7e\x9b\x0f" \
        "\x72\xb2\xef\x90\xd2\x76\x88\x34" \
        "\x59\x04\x64\xd7\x59\x33\xed\x08" \
        "\xc4\x54\xfa\xa7\x62\xb3\x70\x2a" \
        "\x2b\x63\x1c\x33\xc3\x39\xd0\x5b" \
        "\x2e\x24\xc2\x0a\x82\x14\xf9\x9a" \
        "\xf3\x1f\x93\xf8\x0f\x41\x6a\x11" \
        "\x29\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId54) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x81\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\x73\x4b\xdc\x39\x92\x73\xd3" \
        "\x40\x3d\x93\x4c\xea\xae\x16\xe8" \
        "\x7a\x68\xc6\xbf\xf6\xb7\x7d\x80" \
        "\x37\xff\x41\xc9\x79\x22\x49\x8a" \
        "\x58\xe7\x04\xc2\x9a\xb5\x19\xd4" \
        "\x1b\xab\x70\x73\x5f\x71\xfc\x26" \
        "\xf5\x89\x36\x1e\x2b\x21\x75\x43" \
        "\x00\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId55) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x00\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\xba\x96\x1c\xc8\xd0\x76\x5c" \
        "\x99\xd5\x74\x70\xee\x1c\x0c\x77" \
        "\xf0\xa5\x62\xa1\x98\xfd\x01\x75" \
        "\xed\xdb\x0c\x03\x3e\x0f\xb8\x52" \
        "\x53\x28\xc5\xe2\xc5\x16\xe2\xb0" \
        "\x0f\x73\x60\x9c\x7f\x76\x91\x95" \
        "\xeb\x1a\x02\xff\x54\x09\x0d\x78" \
        "\x1f\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId56) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa9" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\xe7\x26\x85\x90\x7d\xa9\xe5" \
        "\xa6\x4e\x41\x42\xed\x02\xfc\x0c" \
        "\x6b\xf9\x57\x63\x20\x1d\xb5\x94" \
        "\x2a\xac\x05\x5f\xa8\x7e\x6f\xdd" \
        "\x32\xe4\x83\xfd\x21\xed\x41\x10" \
        "\xd5\xd7\xef\x61\x9b\x74\x0f\xef" \
        "\x2a\xd8\xa7\x1f\xe8\x21\xe4\x2a" \
        "\x2a\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId57) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\x88" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\x50\x06\x46\xd6\x7c\x74\xf1" \
        "\x34\x71\xf0\xad\x03\x4d\xa5\x30" \
        "\xf7\x23\x8f\xe7\x89\x7e\x53\x2a" \
        "\xf8\xec\x29\x77\x64\x3a\x41\x0b" \
        "\x1d\x05\x49\x34\xdf\x56\x7e\x17" \
        "\x02\x76\x38\x9e\x66\xb3\xf3\xcc" \
        "\xb3\xc1\x5a\xed\x23\x9d\x04\xf7" \
        "\x2b\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId58) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xe8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\x7b\xb1\x53\xb8\xe3\x50\xaa" \
        "\x73\x6a\x91\xc9\x21\x21\x75\x78" \
        "\x53\x96\x00\xc1\x29\x9a\xb7\x65" \
        "\x22\xef\x8f\x69\x02\xd7\x9c\x93" \
        "\xf2\x74\x07\x3e\xe6\xbe\xaf\xe6" \
        "\x20\x0e\xca\xf5\x9f\x7c\xd1\x1b" \
        "\xb1\xc8\x33\xf2\x4b\xf3\x0e\xd5" \
        "\x2d\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId59) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\x28" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x80\x4a\x67\xb2\x2b\xe5\x99\xd6" \
        "\x43\x3b\x87\xea\x96\x1c\x82\xc4" \
        "\x57\xab\x50\xf6\x4a\xc6\xb7\xef" \
        "\xb0\xb2\xf9\x09\x88\x92\x7f\x83" \
        "\x74\x23\x03\xc2\x78\xf8\x24\x8e" \
        "\x02\xd5\x67\x9b\x41\xed\x50\x5a" \
        "\xba\x0f\xb5\x11\x10\xd0\xde\xf8" \
        "\x10\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId60) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf3" \
        "\x80\x7f\x45\x2e\xfb\x0c\xd9\x7d" \
        "\xab\x55\x06\x02\x8b\x7b\x87\x68" \
        "\x30\xde\xe0\x2a\x9c\x0c\xbd\x14" \
        "\x0d\xcd\xe5\x09\x63\x8d\x4d\x54" \
        "\x6c\x30\x85\x6b\x21\x51\xbd\xf7" \
        "\x99\x30\xdf\x5b\xbb\x11\xf2\xbe" \
        "\xb6\x6b\xcd\xc2\x5a\xd7\x5f\x21" \
        "\x16\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId61) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf0" \
        "\x80\x8d\x78\x23\x1b\xb3\xc9\xa8" \
        "\x7c\x5b\x8d\x16\x8f\xe0\x5f\x81" \
        "\x97\x50\x3a\x3d\x73\xa6\xd7\x00" \
        "\xf4\x36\xb5\xa7\x6a\xb8\x66\x38" \
        "\x8b\xaa\x69\x30\x19\x1a\x07\x7a" \
        "\xca\x79\x70\x05\x89\x32\xc8\x8b" \
        "\x7f\x9e\x6e\xcb\x13\xc8\x9d\xcd" \
        "\x1d\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId62) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\x72" \
        "\x80\x9e\x5a\x84\x06\x06\x3f\xb3" \
        "\x54\x5f\x0f\xb6\x27\xf8\x41\xb2" \
        "\xe3\xa8\x5a\xd5\xd3\x78\x01\x8e" \
        "\x8b\x58\xfe\x58\xe1\x4e\xe5\x52" \
        "\x0d\x57\xab\xc9\x14\x0e\x9c\x5a" \
        "\x75\xa8\xb0\x9a\xc3\x33\x4d\xd0" \
        "\xca\xd6\x9b\x48\x77\x12\x84\x32" \
        "\x1d\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId63) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x81\x1a\xdf\x92\x20\x10\x88\xe0" \
        "\x51\xee\x48\xb5\x7a\xec\xf4\x6e" \
        "\xdf\xc6\x8e\x5b\xae\xed\x5a\xe4" \
        "\x91\x0b\xa5\x68\x1d\x37\x0f\x75" \
        "\xab\x59\x38\x11\xe1\x82\x93\xef" \
        "\x08\x08\x58\x1c\x25\x41\x96\xbc" \
        "\xbf\x2b\x4c\x45\x41\x36\xa6\x71" \
        "\x1b\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId64) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x82\x5e\x06\xc3\x99\x9e\x83\x08" \
        "\xbe\x43\x9c\x40\x94\x0b\x00\x75" \
        "\xd3\xe4\xf6\x51\x47\xc1\x60\x8c" \
        "\xbe\x6e\x9c\x43\x2e\x33\xbe\xd6" \
        "\x68\x6f\x93\x93\xae\x25\x68\xf0" \
        "\xad\x60\xfe\xbc\xb4\xb6\x17\x9c" \
        "\x0d\x90\xd0\x34\xe7\xc3\xc4\x68" \
        "\x10\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId65) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\xc0\x24\x56\xbb\xd1\x41\xdf\x04" \
        "\x8d\xbf\x18\x43\xbe\x6d\x5f\xef" \
        "\x40\x24\x83\x31\x4c\x2a\xf5\x47" \
        "\xb3\x61\xa0\x9f\x33\x19\x48\x9e" \
        "\xae\xde\x43\x40\x4d\xf9\xfa\xf6" \
        "\x34\xc1\x29\x8d\x67\x8b\x52\x61" \
        "\xc8\x08\xb0\xbe\x37\x26\x01\x3e" \
        "\x39\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId66) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x5d\xb9\x4c\x53\x10\x1f\x52\x1f" \
        "\x6c\x1f\x43\xb6\x0e\xa4\xd7\xe0" \
        "\x6f\xbd\x49\xc2\xe8\xaf\xaf\x4f" \
        "\xcc\x28\x9e\x64\x5e\x08\x80\xa8" \
        "\x7b\x8e\x55\x85\x8d\xf4\xcf\x22" \
        "\x91\xa7\x30\x3f\xfd\xa4\x46\xb8" \
        "\x2a\x11\x7b\x4d\xd4\x08\xcf\xf2" \
        "\x00\x71\x06\xd2\xa8\x96\xa7\xfe" \
        "\xc6\xde\xe5\x3e\xea\x27\x2d\x9b" \
        "\x6e\x73\x8c\x34\x02\x95\x41\x6b" \
        "\x50\xf3\x9a\x94\x63\xa5\x63\x54" \
        "\x50\xb9\xf9\x3c\x4c\x06\x73\x7a" \
        "\xff\xd4\x2a\xe0\x6c\xee\x58\x79" \
        "\xc9\x6c\x0b\xd5\x8a\x91\x34\x55" \
        "\x03\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId67) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x00\x00\x00\x00\x00\x00\x00" \
        "\x00\x27\xab\x98\xab\x86\x2e\x4e" \
        "\x7e\xc3\x36\x1a\x45\xac\x19\x93" \
        "\xe9\xb4\x7d\x9a\xc4\x0d\xb9\x1f" \
        "\xae\xd7\x52\x39\x9c\xee\x04\x13" \
        "\x12\x2b\x47\x34\x65\x94\xfd\x7d" \
        "\x2c\x89\x49\xb4\x3e\x4c\xab\xaf" \
        "\x17\xd8\x33\x9e\xa0\xe3\x07\x02" \
        "\x3f\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId68) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xff\xff\xff\xff\xff\xff\xff" \
        "\xff\xd1\x1b\xae\x33\xa0\x99\x9f" \
        "\xd3\xfd\x2b\xed\x6f\xa5\x57\x76" \
        "\x85\xe8\xfd\x59\x5e\x79\xc0\x06" \
        "\xe5\x8f\xd3\x5f\x69\xf9\x1b\x1d" \
        "\x85\x35\x53\xfb\x40\x06\x01\x9a" \
        "\x07\x72\x5a\xa3\x77\x73\x88\x3d" \
        "\xbe\x12\x25\x38\x12\x88\x7a\xc8" \
        "\x28\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId69) {

    const u8 message[] = \
        "\x31\x32\x33\x34\x30\x30";
    const u8 signature[] = \
        "\xa2\x46\xb3\xac\xef\xe0\xad\xe0" \
        "\x93\xe0\xbc\x49\xf1\x5b\x28\x1f" \
        "\x90\x42\xb6\x3d\x17\x50\x50\xb0" \
        "\x33\xd7\x61\x9b\xa1\xf7\x7f\x57" \
        "\x84\x71\xaa\x7a\x72\x0b\x30\xdd" \
        "\x6e\x58\xcf\xc0\x02\x5b\xb9\x47" \
        "\xd5\xee\x84\xb2\x2b\xf7\x30\x0d" \
        "\x7f\x33\x4e\x48\x14\x1a\xf0\xfa" \
        "\xde\x14\x69\xf5\xde\xdb\x85\x1c" \
        "\x9e\x72\x5d\x27\xbd\x65\x01\x2b" \
        "\xad\xa0\x5e\x70\xcd\xe6\x41\xaa" \
        "\xd9\xce\x0b\xea\x49\x83\x16\x4f" \
        "\x73\x81\x6b\x6f\x13\x09\x5e\x6b" \
        "\x93\xeb\x03\xe8\x50\xca\xd0\xcf" \
        "\x0d\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId70) {

    const u8 message[] = \
        "\x54\x65\x73\x74";
    const u8 signature[] = \
        "\x5d\x05\x3f\xf5\xb7\x1f\x6e\xc3" \
        "\x28\x45\x25\xd3\x5d\x77\x93\x31" \
        "\x78\xc8\xe1\x98\x79\x88\x6d\x08" \
        "\xec\xcc\x6c\x7d\x27\xe9\xe5\xb5" \
        "\xe0\x25\x37\xdb\xc4\xd4\x72\x35" \
        "\x06\xe8\xd1\x71\xfc\x17\x33\x85" \
        "\x75\x73\xdd\x02\xd1\x8f\x48\xf2" \
        "\x80\x24\x1b\xd6\x14\x2d\xdb\x02" \
        "\xc0\xf9\xfa\x13\x39\x55\xd3\xe6" \
        "\x10\xb4\xb2\x7c\xb8\x14\x22\x7d" \
        "\xe8\xb2\x41\xef\x4e\x86\x40\x2b" \
        "\x6e\xf7\x86\x2b\x78\xa3\x86\x95" \
        "\x02\x46\xff\x38\xd6\xd2\xf4\x58" \
        "\x13\x6d\x12\xe3\xc9\x7f\xdd\x98" \
        "\x66\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId71) {

    const u8 message[] = \
        "\x54\x65\x73\x74";
    const u8 signature[] = \
        "\x5d\x05\x3f\xf5\xb7\x1f\x6e\xc3" \
        "\x28\x45\x25\xd3\x5d\x77\x93\x31" \
        "\x78\xc8\xe1\x98\x79\x88\x6d\x08" \
        "\xec\xcc\x6c\x7d\x27\xe9\xe5\xb5" \
        "\xe0\x25\x37\xdb\xc4\xd4\x72\x35" \
        "\x06\xe8\xd1\x71\xfc\x17\x33\x85" \
        "\x75\x73\xdd\x02\xd1\x8f\x48\xf2" \
        "\x80\x17\x60\x2e\xc0\xbf\x9d\x7b" \
        "\xe3\x4e\x8a\xd9\xc6\xc7\x95\x53" \
        "\x32\x44\xe9\x52\x67\x5e\xfd\xcb" \
        "\xac\x9c\x65\xb9\xcb\x85\x40\x2b" \
        "\x6e\xf7\x86\x2b\x78\xa3\x86\x95" \
        "\x02\x46\xff\x38\xd6\xd2\xf4\x58" \
        "\x13\x6d\x12\xe3\xc9\x7f\xdd\x98" \
        "\xa6\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId72) {

    const u8 message[] = \
        "\x54\x65\x73\x74";
    const u8 signature[] = \
        "\x5d\x05\x3f\xf5\xb7\x1f\x6e\xc3" \
        "\x28\x45\x25\xd3\x5d\x77\x93\x31" \
        "\x78\xc8\xe1\x98\x79\x88\x6d\x08" \
        "\xec\xcc\x6c\x7d\x27\xe9\xe5\xb5" \
        "\xe0\x25\x37\xdb\xc4\xd4\x72\x35" \
        "\x06\xe8\xd1\x71\xfc\x17\x33\x85" \
        "\x75\x73\xdd\x02\xd1\x8f\x48\xf2" \
        "\x80\xfd\xe9\xde\x16\xe5\x22\x6d" \
        "\x2a\xf9\xa8\x64\xe2\xac\x1a\x2d" \
        "\x75\x64\x56\xff\xc4\xf1\xb3\x69" \
        "\x35\x70\xad\x4d\xc5\x84\x40\x2b" \
        "\x6e\xf7\x86\x2b\x78\xa3\x86\x95" \
        "\x02\x46\xff\x38\xd6\xd2\xf4\x58" \
        "\x13\x6d\x12\xe3\xc9\x7f\xdd\x98" \
        "\x26\x01";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId73) {

    const u8 message[] = \
        "\x54\x65\x73\x74";
    const u8 signature[] = \
        "\x5d\x05\x3f\xf5\xb7\x1f\x6e\xc3" \
        "\x28\x45\x25\xd3\x5d\x77\x93\x31" \
        "\x78\xc8\xe1\x98\x79\x88\x6d\x08" \
        "\xec\xcc\x6c\x7d\x27\xe9\xe5\xb5" \
        "\xe0\x25\x37\xdb\xc4\xd4\x72\x35" \
        "\x06\xe8\xd1\x71\xfc\x17\x33\x85" \
        "\x75\x73\xdd\x02\xd1\x8f\x48\xf2" \
        "\x80\xc9\xfd\x3f\xc4\x2f\x2d\x50" \
        "\xb8\x4d\xe6\x7a\x19\x77\x24\xe0" \
        "\xfa\xa4\x30\x58\x80\x18\x21\xa5" \
        "\x46\x17\x3d\x76\xb8\x82\x40\x2b" \
        "\x6e\xf7\x86\x2b\x78\xa3\x86\x95" \
        "\x02\x46\xff\x38\xd6\xd2\xf4\x58" \
        "\x13\x6d\x12\xe3\xc9\x7f\xdd\x98" \
        "\x26\x02";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId74) {

    const u8 message[] = \
        "\x54\x65\x73\x74";
    const u8 signature[] = \
        "\x5d\x05\x3f\xf5\xb7\x1f\x6e\xc3" \
        "\x28\x45\x25\xd3\x5d\x77\x93\x31" \
        "\x78\xc8\xe1\x98\x79\x88\x6d\x08" \
        "\xec\xcc\x6c\x7d\x27\xe9\xe5\xb5" \
        "\xe0\x25\x37\xdb\xc4\xd4\x72\x35" \
        "\x06\xe8\xd1\x71\xfc\x17\x33\x85" \
        "\x75\x73\xdd\x02\xd1\x8f\x48\xf2" \
        "\x80\x31\xd6\x7d\x69\x9a\x18\x8a" \
        "\x9c\xa4\x6b\x4e\xab\xe2\x10\x7a" \
        "\xef\x23\x7c\xa6\x09\xcb\x46\x2e" \
        "\x24\xc9\x1d\x25\xd2\x86\x40\x2b" \
        "\x6e\xf7\x86\x2b\x78\xa3\x86\x95" \
        "\x02\x46\xff\x38\xd6\xd2\xf4\x58" \
        "\x13\x6d\x12\xe3\xc9\x7f\xdd\x98" \
        "\x66\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId75) {

    const u8 message[] = \
        "\x54\x65\x73\x74";
    const u8 signature[] = \
        "\x5d\x05\x3f\xf5\xb7\x1f\x6e\xc3" \
        "\x28\x45\x25\xd3\x5d\x77\x93\x31" \
        "\x78\xc8\xe1\x98\x79\x88\x6d\x08" \
        "\xec\xcc\x6c\x7d\x27\xe9\xe5\xb5" \
        "\xe0\x25\x37\xdb\xc4\xd4\x72\x35" \
        "\x06\xe8\xd1\x71\xfc\x17\x33\x85" \
        "\x75\x73\xdd\x02\xd1\x8f\x48\xf2" \
        "\x80\x31\xd6\x7d\x69\x9a\x18\x8a" \
        "\x9c\xa4\x6b\x4e\xab\xe2\x10\x7a" \
        "\xef\x23\x7c\xa6\x09\xcb\x46\x2e" \
        "\x24\xc9\x1d\x25\xd2\x86\x40\x2b" \
        "\x6e\xf7\x86\x2b\x78\xa3\x86\x95" \
        "\x02\x46\xff\x38\xd6\xd2\xf4\x58" \
        "\x13\x6d\x12\xe3\xc9\x7f\xdd\x98" \
        "\xa6\x00";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId76) {

    const u8 message[] = \
        "\x54\x65\x73\x74";
    const u8 signature[] = \
        "\x5d\x05\x3f\xf5\xb7\x1f\x6e\xc3" \
        "\x28\x45\x25\xd3\x5d\x77\x93\x31" \
        "\x78\xc8\xe1\x98\x79\x88\x6d\x08" \
        "\xec\xcc\x6c\x7d\x27\xe9\xe5\xb5" \
        "\xe0\x25\x37\xdb\xc4\xd4\x72\x35" \
        "\x06\xe8\xd1\x71\xfc\x17\x33\x85" \
        "\x75\x73\xdd\x02\xd1\x8f\x48\xf2" \
        "\x80\x31\xd6\x7d\x69\x9a\x18\x8a" \
        "\x9c\xa4\x6b\x4e\xab\xe2\x10\x7a" \
        "\xef\x23\x7c\xa6\x09\xcb\x46\x2e" \
        "\x24\xc9\x1d\x25\xd2\x86\x40\x2b" \
        "\x6e\xf7\x86\x2b\x78\xa3\x86\x95" \
        "\x02\x46\xff\x38\xd6\xd2\xf4\x58" \
        "\x13\x6d\x12\xe3\xc9\x7f\xdd\x98" \
        "\x26\x01";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId77) {

    const u8 message[] = \
        "\x54\x65\x73\x74";
    const u8 signature[] = \
        "\x5d\x05\x3f\xf5\xb7\x1f\x6e\xc3" \
        "\x28\x45\x25\xd3\x5d\x77\x93\x31" \
        "\x78\xc8\xe1\x98\x79\x88\x6d\x08" \
        "\xec\xcc\x6c\x7d\x27\xe9\xe5\xb5" \
        "\xe0\x25\x37\xdb\xc4\xd4\x72\x35" \
        "\x06\xe8\xd1\x71\xfc\x17\x33\x85" \
        "\x75\x73\xdd\x02\xd1\x8f\x48\xf2" \
        "\x80\x30\xd6\x7d\x69\x9a\x18\x8a" \
        "\x9c\xa4\x6b\x4e\xab\xe2\x10\x7a" \
        "\xef\x23\x7c\xa6\x09\xcb\x46\x2e" \
        "\x24\xc9\x1d\x25\xd2\x85\x40\x2b" \
        "\x6e\xf7\x86\x2b\x78\xa3\x86\x95" \
        "\x02\x46\xff\x38\xd6\xd2\xf4\x58" \
        "\x13\x6d\x12\xe3\xc9\x7f\xdd\x98" \
        "\x26\x01";
    const u8 public_key[] = \
        "\x41\x96\x10\xa5\x34\xaf\x12\x7f" \
        "\x58\x3b\x04\x81\x8c\xdb\x7f\x0f" \
        "\xf3\x00\xb0\x25\xf2\xe0\x16\x82" \
        "\xbc\xae\x33\xfd\x69\x1c\xee\x03" \
        "\x95\x11\xdf\x0c\xdd\xc6\x90\xee" \
        "\x97\x84\x26\xe8\xb3\x8e\x50\xce" \
        "\x5a\xf7\xdc\xfb\xa5\x0f\x70\x4c" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId78) {

    const u8 message[] = \
        "";
    const u8 signature[] = \
        "\x53\x3a\x37\xf6\xbb\xe4\x57\x25" \
        "\x1f\x02\x3c\x0d\x88\xf9\x76\xae" \
        "\x2d\xfb\x50\x4a\x84\x3e\x34\xd2" \
        "\x07\x4f\xd8\x23\xd4\x1a\x59\x1f" \
        "\x2b\x23\x3f\x03\x4f\x62\x82\x81" \
        "\xf2\xfd\x7a\x22\xdd\xd4\x7d\x78" \
        "\x28\xc5\x9b\xd0\xa2\x1b\xfd\x39" \
        "\x80\xff\x0d\x20\x28\xd4\xb1\x8a" \
        "\x9d\xf6\x3e\x00\x6c\x5d\x1c\x2d" \
        "\x34\x5b\x92\x5d\x8d\xc0\x0b\x41" \
        "\x04\x85\x2d\xb9\x9a\xc5\xc7\xcd" \
        "\xda\x85\x30\xa1\x13\xa0\xf4\xdb" \
        "\xb6\x11\x49\xf0\x5a\x73\x63\x26" \
        "\x8c\x71\xd9\x58\x08\xff\x2e\x65" \
        "\x26\x00";
    const u8 public_key[] = \
        "\x5f\xd7\x44\x9b\x59\xb4\x61\xfd" \
        "\x2c\xe7\x87\xec\x61\x6a\xd4\x6a" \
        "\x1d\xa1\x34\x24\x85\xa7\x0e\x1f" \
        "\x8a\x0e\xa7\x5d\x80\xe9\x67\x78" \
        "\xed\xf1\x24\x76\x9b\x46\xc7\x06" \
        "\x1b\xd6\x78\x3d\xf1\xe5\x0f\x6c" \
        "\xd1\xfa\x1a\xbe\xaf\xe8\x25\x61" \
        "\x80";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId79) {

    const u8 message[] = \
        "\x03";
    const u8 signature[] = \
        "\x26\xb8\xf9\x17\x27\xbd\x62\x89" \
        "\x7a\xf1\x5e\x41\xeb\x43\xc3\x77" \
        "\xef\xb9\xc6\x10\xd4\x8f\x23\x35" \
        "\xcb\x0b\xd0\x08\x78\x10\xf4\x35" \
        "\x25\x41\xb1\x43\xc4\xb9\x81\xb7" \
        "\xe1\x8f\x62\xde\x8c\xcd\xf6\x33" \
        "\xfc\x1b\xf0\x37\xab\x7c\xd7\x79" \
        "\x80\x5e\x0d\xbc\xc0\xaa\xe1\xcb" \
        "\xce\xe1\xaf\xb2\xe0\x27\xdf\x36" \
        "\xbc\x04\xdc\xec\xbf\x15\x43\x36" \
        "\xc1\x9f\x0a\xf7\xe0\xa6\x47\x29" \
        "\x05\xe7\x99\xf1\x95\x3d\x2a\x0f" \
        "\xf3\x34\x8a\xb2\x1a\xa4\xad\xaf" \
        "\xd1\xd2\x34\x44\x1c\xf8\x07\xc0" \
        "\x3a\x00";
    const u8 public_key[] = \
        "\x43\xba\x28\xf4\x30\xcd\xff\x45" \
        "\x6a\xe5\x31\x54\x5f\x7e\xcd\x0a" \
        "\xc8\x34\xa5\x5d\x93\x58\xc0\x37" \
        "\x2b\xfa\x0c\x6c\x67\x98\xc0\x86" \
        "\x6a\xea\x01\xeb\x00\x74\x28\x02" \
        "\xb8\x43\x8e\xa4\xcb\x82\x16\x9c" \
        "\x23\x51\x60\x62\x7b\x4c\x3a\x94" \
        "\x80";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId80) {

    const u8 message[] = \
        "\x03";
    const u8 signature[] = \
        "\xd4\xf8\xf6\x13\x17\x70\xdd\x46" \
        "\xf4\x08\x67\xd6\xfd\x5d\x50\x55" \
        "\xde\x43\x54\x1f\x8c\x5e\x35\xab" \
        "\xbc\xd0\x01\xb3\x2a\x89\xf7\xd2" \
        "\x15\x1f\x76\x47\xf1\x1d\x8c\xa2" \
        "\xae\x27\x9f\xb8\x42\xd6\x07\x21" \
        "\x7f\xce\x6e\x04\x2f\x68\x15\xea" \
        "\x00\x0c\x85\x74\x1d\xe5\xc8\xda" \
        "\x11\x44\xa6\xa1\xab\xa7\xf9\x6d" \
        "\xe4\x25\x05\xd7\xa7\x29\x85\x24" \
        "\xfd\xa5\x38\xfc\xcb\xbb\x75\x4f" \
        "\x57\x8c\x1c\xad\x10\xd5\x4d\x0d" \
        "\x54\x28\x40\x7e\x85\xdc\xbc\x98" \
        "\xa4\x91\x55\xc1\x37\x64\xe6\x6c" \
        "\x3c\x00";
    const u8 public_key[] = \
        "\x43\xba\x28\xf4\x30\xcd\xff\x45" \
        "\x6a\xe5\x31\x54\x5f\x7e\xcd\x0a" \
        "\xc8\x34\xa5\x5d\x93\x58\xc0\x37" \
        "\x2b\xfa\x0c\x6c\x67\x98\xc0\x86" \
        "\x6a\xea\x01\xeb\x00\x74\x28\x02" \
        "\xb8\x43\x8e\xa4\xcb\x82\x16\x9c" \
        "\x23\x51\x60\x62\x7b\x4c\x3a\x94" \
        "\x80";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect verification failure */
    FAIL_UNLESS_EQUAL(0, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId81) {

    const u8 message[] = \
        "\x0c\x3e\x54\x40\x74\xec\x63\xb0" \
        "\x26\x5e\x0c";
    const u8 signature[] = \
        "\x1f\x0a\x88\x88\xce\x25\xe8\xd4" \
        "\x58\xa2\x11\x30\x87\x9b\x84\x0a" \
        "\x90\x89\xd9\x99\xaa\xba\x03\x9e" \
        "\xaf\x3e\x3a\xfa\x09\x0a\x09\xd3" \
        "\x89\xdb\xa8\x2c\x4f\xf2\xae\x8a" \
        "\xc5\xcd\xfb\x7c\x55\xe9\x4d\x5d" \
        "\x96\x1a\x29\xfe\x01\x09\x94\x1e" \
        "\x00\xb8\xdb\xde\xea\x6d\x3b\x05" \
        "\x10\x68\xdf\x72\x54\xc0\xcd\xc1" \
        "\x29\xcb\xe6\x2d\xb2\xdc\x95\x7d" \
        "\xbb\x47\xb5\x1f\xd3\xf2\x13\xfb" \
        "\x86\x98\xf0\x64\x77\x42\x50\xa5" \
        "\x02\x89\x61\xc9\xbf\x8f\xfd\x97" \
        "\x3f\xe5\xd5\xc2\x06\x49\x2b\x14" \
        "\x0e\x00";
    const u8 public_key[] = \
        "\xdc\xea\x9e\x78\xf3\x5a\x1b\xf3" \
        "\x49\x9a\x83\x1b\x10\xb8\x6c\x90" \
        "\xaa\xc0\x1c\xd8\x4b\x67\xa0\x10" \
        "\x9b\x55\xa3\x6e\x93\x28\xb1\xe3" \
        "\x65\xfc\xe1\x61\xd7\x1c\xe7\x13" \
        "\x1a\x54\x3e\xa4\xcb\x5f\x7e\x9f" \
        "\x1d\x8b\x00\x69\x64\x47\x00\x14" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId82) {

    const u8 message[] = \
        "\x64\xa6\x5f\x3c\xde\xdc\xdd\x66" \
        "\x81\x1e\x29\x15";
    const u8 signature[] = \
        "\x7e\xee\xab\x7c\x4e\x50\xfb\x79" \
        "\x9b\x41\x8e\xe5\xe3\x19\x7f\xf6" \
        "\xbf\x15\xd4\x3a\x14\xc3\x43\x89" \
        "\xb5\x9d\xd1\xa7\xb1\xb8\x5b\x4a" \
        "\xe9\x04\x38\xac\xa6\x34\xbe\xa4" \
        "\x5e\x3a\x26\x95\xf1\x27\x0f\x07" \
        "\xfd\xcd\xf7\xc6\x2b\x8e\xfe\xaf" \
        "\x00\xb4\x5c\x2c\x96\xba\x45\x7e" \
        "\xb1\xa8\xbf\x07\x5a\x3d\xb2\x8e" \
        "\x5c\x24\xf6\xb9\x23\xed\x4a\xd7" \
        "\x47\xc3\xc9\xe0\x3c\x70\x79\xef" \
        "\xb8\x7c\xb1\x10\xd3\xa9\x98\x61" \
        "\xe7\x20\x03\xcb\xae\x6d\x6b\x8b" \
        "\x82\x7e\x4e\x6c\x14\x30\x64\xff" \
        "\x3c\x00";
    const u8 public_key[] = \
        "\x3b\xa1\x6d\xa0\xc6\xf2\xcc\x1f" \
        "\x30\x18\x77\x40\x75\x6f\x5e\x79" \
        "\x8d\x6b\xc5\xfc\x01\x5d\x7c\x63" \
        "\xcc\x95\x10\xee\x3f\xd4\x4a\xdc" \
        "\x24\xd8\xe9\x68\xb6\xe4\x6e\x6f" \
        "\x94\xd1\x9b\x94\x53\x61\x72\x6b" \
        "\xd7\x5e\x14\x9e\xf0\x98\x17\xf5" \
        "\x80";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId83) {

    const u8 message[] = \
        "\x64\xa6\x5f\x3c\xde\xdc\xdd\x66" \
        "\x81\x1e\x29\x15\xe7";
    const u8 signature[] = \
        "\x6a\x12\x06\x6f\x55\x33\x1b\x6c" \
        "\x22\xac\xd5\xd5\xbf\xc5\xd7\x12" \
        "\x28\xfb\xda\x80\xae\x8d\xec\x26" \
        "\xbd\xd3\x06\x74\x3c\x50\x27\xcb" \
        "\x48\x90\x81\x0c\x16\x2c\x02\x74" \
        "\x68\x67\x5e\xcf\x64\x5a\x83\x17" \
        "\x6c\x0d\x73\x23\xa2\xcc\xde\x2d" \
        "\x80\xef\xe5\xa1\x26\x8e\x8a\xca" \
        "\x1d\x6f\xbc\x19\x4d\x3f\x77\xc4" \
        "\x49\x86\xeb\x4a\xb4\x17\x79\x19" \
        "\xad\x8b\xec\x33\xeb\x47\xbb\xb5" \
        "\xfc\x6e\x28\x19\x6f\xd1\xca\xf5" \
        "\x6b\x4e\x7e\x0b\xa5\x51\x92\x34" \
        "\xd0\x47\x15\x5a\xc7\x27\xa1\x05" \
        "\x31\x00";
    const u8 public_key[] = \
        "\xb3\xda\x07\x9b\x0a\xa4\x93\xa5" \
        "\x77\x20\x29\xf0\x46\x7b\xae\xbe" \
        "\xe5\xa8\x11\x2d\x9d\x3a\x22\x53" \
        "\x23\x61\xda\x29\x4f\x7b\xb3\x81" \
        "\x5c\x5d\xc5\x9e\x17\x6b\x4d\x9f" \
        "\x38\x1c\xa0\x93\x8e\x13\xc6\xc0" \
        "\x7b\x17\x4b\xe6\x5d\xfa\x57\x8e" \
        "\x80";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId84) {

    const u8 message[] = \
        "\xbd\x0f\x6a\x37\x47\xcd\x56\x1b" \
        "\xdd\xdf\x46\x40\xa3\x32\x46\x1a" \
        "\x4a\x30\xa1\x2a\x43\x4c\xd0\xbf" \
        "\x40\xd7\x66\xd9\xc6\xd4\x58\xe5" \
        "\x51\x22\x04\xa3\x0c\x17\xd1\xf5" \
        "\x0b\x50\x79\x63\x1f\x64\xeb\x31" \
        "\x12\x18\x2d\xa3\x00\x58\x35\x46" \
        "\x11\x13\x71\x8d\x1a\x5e\xf9\x44";
    const u8 signature[] = \
        "\x55\x4b\xc2\x48\x08\x60\xb4\x9e" \
        "\xab\x85\x32\xd2\xa5\x33\xb7\xd5" \
        "\x78\xef\x47\x3e\xeb\x58\xc9\x8b" \
        "\xb2\xd0\xe1\xce\x48\x8a\x98\xb1" \
        "\x8d\xfd\xe9\xb9\xb9\x07\x75\xe6" \
        "\x7f\x47\xd4\xa1\xc3\x48\x20\x58" \
        "\xef\xc9\xf4\x0d\x2c\xa0\x33\xa0" \
        "\x80\x1b\x63\xd4\x5b\x3b\x72\x2e" \
        "\xf5\x52\xba\xd3\xb4\xcc\xb6\x67" \
        "\xda\x35\x01\x92\xb6\x1c\x50\x8c" \
        "\xf7\xb6\xb5\xad\xad\xc2\xc8\xd9" \
        "\xa4\x46\xef\x00\x3f\xb0\x5c\xba" \
        "\x5f\x30\xe8\x8e\x36\xec\x27\x03" \
        "\xb3\x49\xca\x22\x9c\x26\x70\x83" \
        "\x39\x00";
    const u8 public_key[] = \
        "\xdf\x97\x05\xf5\x8e\xdb\xab\x80" \
        "\x2c\x7f\x83\x63\xcf\xe5\x56\x0a" \
        "\xb1\xc6\x13\x2c\x20\xa9\xf1\xdd" \
        "\x16\x34\x83\xa2\x6f\x8a\xc5\x3a" \
        "\x39\xd6\x80\x8b\xf4\xa1\xdf\xbd" \
        "\x26\x1b\x09\x9b\xb0\x3b\x3f\xb5" \
        "\x09\x06\xcb\x28\xbd\x8a\x08\x1f" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId85) {

    const u8 message[] = \
        "\x15\x77\x75\x32\xb0\xbd\xd0\xd1" \
        "\x38\x9f\x63\x6c\x5f\x6b\x9b\xa7" \
        "\x34\xc9\x0a\xf5\x72\x87\x7e\x2d" \
        "\x27\x2d\xd0\x78\xaa\x1e\x56\x7c" \
        "\xfa\x80\xe1\x29\x28\xbb\x54\x23" \
        "\x30\xe8\x40\x9f\x31\x74\x50\x41" \
        "\x07\xec\xd5\xef\xac\x61\xae\x75" \
        "\x04\xda\xbe\x2a\x60\x2e\xde\x89" \
        "\xe5\xcc\xa6\x25\x7a\x7c\x77\xe2" \
        "\x7a\x70\x2b\x3a\xe3\x9f\xc7\x69" \
        "\xfc\x54\xf2\x39\x5a\xe6\xa1\x17" \
        "\x8c\xab\x47\x38\xe5\x43\x07\x2f" \
        "\xc1\xc1\x77\xfe\x71\xe9\x2e\x25" \
        "\xbf\x03\xe4\xec\xb7\x2f\x47\xb6" \
        "\x4d\x04\x65\xaa\xea\x4c\x7f\xad" \
        "\x37\x25\x36\xc8\xba\x51\x6a\x60" \
        "\x39\xc3\xc2\xa3\x9f\x0e\x4d\x83" \
        "\x2b\xe4\x32\xdf\xa9\xa7\x06\xa6" \
        "\xe5\xc7\xe1\x9f\x39\x79\x64\xca" \
        "\x42\x58\x00\x2f\x7c\x05\x41\xb5" \
        "\x90\x31\x6d\xbc\x56\x22\xb6\xb2" \
        "\xa6\xfe\x7a\x4a\xbf\xfd\x96\x10" \
        "\x5e\xca\x76\xea\x7b\x98\x81\x6a" \
        "\xf0\x74\x8c\x10\xdf\x04\x8c\xe0" \
        "\x12\xd9\x01\x01\x5a\x51\xf1\x89" \
        "\xf3\x88\x81\x45\xc0\x36\x50\xaa" \
        "\x23\xce\x89\x4c\x3b\xd8\x89\xe0" \
        "\x30\xd5\x65\x07\x1c\x59\xf4\x09" \
        "\xa9\x98\x1b\x51\x87\x8f\xd6\xfc" \
        "\x11\x06\x24\xdc\xbc\xde\x0b\xf7" \
        "\xa6\x9c\xcc\xe3\x8f\xab\xdf\x86" \
        "\xf3\xbe\xf6\x04\x48\x19\xde\x11";
    const u8 signature[] = \
        "\xc6\x50\xdd\xbb\x06\x01\xc1\x9c" \
        "\xa1\x14\x39\xe1\x64\x0d\xd9\x31" \
        "\xf4\x3c\x51\x8e\xa5\xbe\xa7\x0d" \
        "\x3d\xcd\xe5\xf4\x19\x1f\xe5\x3f" \
        "\x00\xcf\x96\x65\x46\xb7\x2b\xcc" \
        "\x7d\x58\xbe\x2b\x9b\xad\xef\x28" \
        "\x74\x39\x54\xe3\xa4\x4a\x23\xf8" \
        "\x80\xe8\xd4\xf1\xcf\xce\x2d\x7a" \
        "\x61\x45\x2d\x26\xda\x05\x89\x6f" \
        "\x0a\x50\xda\x66\xa2\x39\xa8\xa1" \
        "\x88\xb6\xd8\x25\xb3\x30\x5a\xd7" \
        "\x7b\x73\xfb\xac\x08\x36\xec\xc6" \
        "\x09\x87\xfd\x08\x52\x7c\x1a\x8e" \
        "\x80\xd5\x82\x3e\x65\xca\xfe\x2a" \
        "\x3d\x00";
    const u8 public_key[] = \
        "\x79\x75\x6f\x01\x4d\xcf\xe2\x07" \
        "\x9f\x5d\xd9\xe7\x18\xbe\x41\x71" \
        "\xe2\xef\x24\x86\xa0\x8f\x25\x18" \
        "\x6f\x6b\xff\x43\xa9\x93\x6b\x9b" \
        "\xfe\x12\x40\x2b\x08\xae\x65\x79" \
        "\x8a\x3d\x81\xe2\x2e\x9e\xc8\x0e" \
        "\x76\x90\x86\x2e\xf3\xd4\xed\x3a" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}

FE3C_TEST(EDDSA_WYCHEPROOF_ED448, TcId86) {

    const u8 message[] = \
        "\x6d\xdf\x80\x2e\x1a\xae\x49\x86" \
        "\x93\x5f\x7f\x98\x1b\xa3\xf0\x35" \
        "\x1d\x62\x73\xc0\xa0\xc2\x2c\x9c" \
        "\x0e\x83\x39\x16\x8e\x67\x54\x12" \
        "\xa3\xde\xbf\xaf\x43\x5e\xd6\x51" \
        "\x55\x80\x07\xdb\x43\x84\xb6\x50" \
        "\xfc\xc0\x7e\x3b\x58\x6a\x27\xa4" \
        "\xf7\xa0\x0a\xc8\xa6\xfe\xc2\xcd" \
        "\x86\xae\x4b\xf1\x57\x0c\x41\xe6" \
        "\xa4\x0c\x93\x1d\xb2\x7b\x2f\xaa" \
        "\x15\xa8\xce\xdd\x52\xcf\xf7\x36" \
        "\x2c\x4e\x6e\x23\xda\xec\x0f\xbc" \
        "\x3a\x79\xb6\x80\x6e\x31\x6e\xfc" \
        "\xc7\xb6\x81\x19\xbf\x46\xbc\x76" \
        "\xa2\x60\x67\xa5\x3f\x29\x6d\xaf" \
        "\xdb\xdc\x11\xc7\x7f\x77\x77\xe9" \
        "\x72\x66\x0c\xf4\xb6\xa9\xb3\x69" \
        "\xa6\x66\x5f\x02\xe0\xcc\x9b\x6e" \
        "\xdf\xad\x13\x6b\x4f\xab\xe7\x23" \
        "\xd2\x81\x3d\xb3\x13\x6c\xfd\xe9" \
        "\xb6\xd0\x44\x32\x2f\xee\x29\x47" \
        "\x95\x2e\x03\x1b\x73\xab\x5c\x60" \
        "\x33\x49\xb3\x07\xbd\xc2\x7b\xc6" \
        "\xcb\x8b\x8b\xbd\x7b\xd3\x23\x21" \
        "\x9b\x80\x33\xa5\x81\xb5\x9e\xad" \
        "\xeb\xb0\x9b\x3c\x4f\x3d\x22\x77" \
        "\xd4\xf0\x34\x36\x24\xac\xc8\x17" \
        "\x80\x47\x28\xb2\x5a\xb7\x97\x17" \
        "\x2b\x4c\x5c\x21\xa2\x2f\x9c\x78" \
        "\x39\xd6\x43\x00\x23\x2e\xb6\x6e" \
        "\x53\xf3\x1c\x72\x3f\xa3\x7f\xe3" \
        "\x87\xc7\xd3\xe5\x0b\xdf\x98\x13" \
        "\xa3\x0e\x5b\xb1\x2c\xf4\xcd\x93" \
        "\x0c\x40\xcf\xb4\xe1\xfc\x62\x25" \
        "\x92\xa4\x95\x88\x79\x44\x94\xd5" \
        "\x6d\x24\xea\x4b\x40\xc8\x9f\xc0" \
        "\x59\x6c\xc9\xeb\xb9\x61\xc8\xcb" \
        "\x10\xad\xde\x97\x6a\x5d\x60\x2b" \
        "\x1c\x3f\x85\xb9\xb9\xa0\x01\xed" \
        "\x3c\x6a\x4d\x3b\x14\x37\xf5\x20" \
        "\x96\xcd\x19\x56\xd0\x42\xa5\x97" \
        "\xd5\x61\xa5\x96\xec\xd3\xd1\x73" \
        "\x5a\x8d\x57\x0e\xa0\xec\x27\x22" \
        "\x5a\x2c\x4a\xaf\xf2\x63\x06\xd1" \
        "\x52\x6c\x1a\xf3\xca\x6d\x9c\xf5" \
        "\xa2\xc9\x8f\x47\xe1\xc4\x6d\xb9" \
        "\xa3\x32\x34\xcf\xd4\xd8\x1f\x2c" \
        "\x98\x53\x8a\x09\xeb\xe7\x69\x98" \
        "\xd0\xd8\xfd\x25\x99\x7c\x7d\x25" \
        "\x5c\x6d\x66\xec\xe6\xfa\x56\xf1" \
        "\x11\x44\x95\x0f\x02\x77\x95\xe6" \
        "\x53\x00\x8f\x4b\xd7\xca\x2d\xee" \
        "\x85\xd8\xe9\x0f\x3d\xc3\x15\x13" \
        "\x0c\xe2\xa0\x03\x75\xa3\x18\xc7" \
        "\xc3\xd9\x7b\xe2\xc8\xce\x5b\x6d" \
        "\xb4\x1a\x62\x54\xff\x26\x4f\xa6" \
        "\x15\x5b\xae\xe3\xb0\x77\x3c\x0f" \
        "\x49\x7c\x57\x3f\x19\xbb\x4f\x42" \
        "\x40\x28\x1f\x0b\x1f\x4f\x7b\xe8" \
        "\x57\xa4\xe5\x9d\x41\x6c\x06\xb4" \
        "\xc5\x0f\xa0\x9e\x18\x10\xdd\xc6" \
        "\xb1\x46\x7b\xae\xac\x5a\x36\x68" \
        "\xd1\x1b\x6e\xca\xa9\x01\x44\x00" \
        "\x16\xf3\x89\xf8\x0a\xcc\x4d\xb9" \
        "\x77\x02\x5e\x7f\x59\x24\x38\x8c" \
        "\x7e\x34\x0a\x73\x2e\x55\x44\x40" \
        "\xe7\x65\x70\xf8\xdd\x71\xb7\xd6" \
        "\x40\xb3\x45\x0d\x1f\xd5\xf0\x41" \
        "\x0a\x18\xf9\xa3\x49\x4f\x70\x7c" \
        "\x71\x7b\x79\xb4\xbf\x75\xc9\x84" \
        "\x00\xb0\x96\xb2\x16\x53\xb5\xd2" \
        "\x17\xcf\x35\x65\xc9\x59\x74\x56" \
        "\xf7\x07\x03\x49\x7a\x07\x87\x63" \
        "\x82\x9b\xc0\x1b\xb1\xcb\xc8\xfa" \
        "\x04\xea\xdc\x9a\x6e\x3f\x66\x99" \
        "\x58\x7a\x9e\x75\xc9\x4e\x5b\xab" \
        "\x00\x36\xe0\xb2\xe7\x11\x39\x2c" \
        "\xff\x00\x47\xd0\xd6\xb0\x5b\xd2" \
        "\xa5\x88\xbc\x10\x97\x18\x95\x42" \
        "\x59\xf1\xd8\x66\x78\xa5\x79\xa3" \
        "\x12\x0f\x19\xcf\xb2\x96\x3f\x17" \
        "\x7a\xeb\x70\xf2\xd4\x84\x48\x26" \
        "\x26\x2e\x51\xb8\x02\x71\x27\x20" \
        "\x68\xef\x5b\x38\x56\xfa\x85\x35" \
        "\xaa\x2a\x88\xb2\xd4\x1f\x2a\x0e" \
        "\x2f\xda\x76\x24\xc2\x85\x02\x72" \
        "\xac\x4a\x2f\x56\x1f\x8f\x2f\x7a" \
        "\x31\x8b\xfd\x5c\xaf\x96\x96\x14" \
        "\x9e\x4a\xc8\x24\xad\x34\x60\x53" \
        "\x8f\xdc\x25\x42\x1b\xee\xc2\xcc" \
        "\x68\x18\x16\x2d\x06\xbb\xed\x0c" \
        "\x40\xa3\x87\x19\x23\x49\xdb\x67" \
        "\xa1\x18\xba\xda\x6c\xd5\xab\x01" \
        "\x40\xee\x27\x32\x04\xf6\x28\xaa" \
        "\xd1\xc1\x35\xf7\x70\x27\x9a\x65" \
        "\x1e\x24\xd8\xc1\x4d\x75\xa6\x05" \
        "\x9d\x76\xb9\x6a\x6f\xd8\x57\xde" \
        "\xf5\xe0\xb3\x54\xb2\x7a\xb9\x37" \
        "\xa5\x81\x5d\x16\xb5\xfa\xe4\x07" \
        "\xff\x18\x22\x2c\x6d\x1e\xd2\x63" \
        "\xbe\x68\xc9\x5f\x32\xd9\x08\xbd" \
        "\x89\x5c\xd7\x62\x07\xae\x72\x64" \
        "\x87\x56\x7f\x9a\x67\xda\xd7\x9a" \
        "\xbe\xc3\x16\xf6\x83\xb1\x7f\x2d" \
        "\x02\xbf\x07\xe0\xac\x8b\x5b\xc6" \
        "\x16\x2c\xf9\x46\x97\xb3\xc2\x7c" \
        "\xd1\xfe\xa4\x9b\x27\xf2\x3b\xa2" \
        "\x90\x18\x71\x96\x25\x06\x52\x0c" \
        "\x39\x2d\xa8\xb6\xad\x0d\x99\xf7" \
        "\x01\x3f\xbc\x06\xc2\xc1\x7a\x56" \
        "\x95\x00\xc8\xa7\x69\x64\x81\xc1" \
        "\xcd\x33\xe9\xb1\x4e\x40\xb8\x2e" \
        "\x79\xa5\xf5\xdb\x82\x57\x1b\xa9" \
        "\x7b\xae\x3a\xd3\xe0\x47\x95\x15" \
        "\xbb\x0e\x2b\x0f\x3b\xfc\xd1\xfd" \
        "\x33\x03\x4e\xfc\x62\x45\xed\xdd" \
        "\x7e\xe2\x08\x6d\xda\xe2\x60\x0d" \
        "\x8c\xa7\x3e\x21\x4e\x8c\x2b\x0b" \
        "\xdb\x2b\x04\x7c\x6a\x46\x4a\x56" \
        "\x2e\xd7\x7b\x73\xd2\xd8\x41\xc4" \
        "\xb3\x49\x73\x55\x12\x57\x71\x3b" \
        "\x75\x36\x32\xef\xba\x34\x81\x69" \
        "\xab\xc9\x0a\x68\xf4\x26\x11\xa4" \
        "\x01\x26\xd7\xcb\x21\xb5\x86\x95" \
        "\x56\x81\x86\xf7\xe5\x69\xd2\xff" \
        "\x0f\x9e\x74\x5d\x04\x87\xdd\x2e" \
        "\xb9\x97\xca\xfc\x5a\xbf\x9d\xd1" \
        "\x02\xe6\x2f\xf6\x6c\xba\x87";
    const u8 signature[] = \
        "\xe3\x01\x34\x5a\x41\xa3\x9a\x4d" \
        "\x72\xff\xf8\xdf\x69\xc9\x80\x75" \
        "\xa0\xcc\x08\x2b\x80\x2f\xc9\xb2" \
        "\xb6\xbc\x50\x3f\x92\x6b\x65\xbd" \
        "\xdf\x7f\x4c\x8f\x1c\xb4\x9f\x63" \
        "\x96\xaf\xc8\xa7\x0a\xbe\x6d\x8a" \
        "\xef\x0d\xb4\x78\xd4\xc6\xb2\x97" \
        "\x00\x76\xc6\xa0\x48\x4f\xe7\x6d" \
        "\x76\xb3\xa9\x76\x25\xd7\x9f\x1c" \
        "\xe2\x40\xe7\xc5\x76\x75\x0d\x29" \
        "\x55\x28\x28\x6f\x71\x9b\x41\x3d" \
        "\xe9\xad\xa3\xe8\xeb\x78\xed\x57" \
        "\x36\x03\xce\x30\xd8\xbb\x76\x17" \
        "\x85\xdc\x30\xdb\xc3\x20\x86\x9e" \
        "\x1a\x00";
    const u8 public_key[] = \
        "\xa8\x1b\x2e\x8a\x70\xa5\xac\x94" \
        "\xff\xdb\xcc\x9b\xad\xfc\x3f\xeb" \
        "\x08\x01\xf2\x58\x57\x8b\xb1\x14" \
        "\xad\x44\xec\xe1\xec\x0e\x79\x9d" \
        "\xa0\x8e\xff\xb8\x1c\x5d\x68\x5c" \
        "\x0c\x56\xf6\x4e\xec\xae\xf8\xcd" \
        "\xf1\x1c\xc3\x87\x37\x83\x8c\xf4" \
        "\x00";

    eddsa_verify_request req = {
        .signature = signature,
        .message = message,
        .public_key = public_key,
        .message_length = sizeof(message) - 1,
        .curve_id = EDDSA_CURVE_ED448,
    };

    int verified = eddsa_verify(&req);
    /* Expect successful verification */
    FAIL_UNLESS_EQUAL(1, verified);
}
